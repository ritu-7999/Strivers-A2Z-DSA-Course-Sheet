class Solution {
     public String expand(String s,int l,int h){
       
        while(l>=0 && h<=s.length()-1 && s.charAt(l)==s.charAt(h)){
            l--;
            h++;
        }
        return s.substring(l+1,h);

    }
    public String longestPalindrome(String s) {
        int n=s.length();
         if (s == null || n == 0) {
            return s;
        }
 String max_str = "", curr_str; 
        int max_length = 0, curr_length;
        for(int i=0;i<n;i++){
           curr_str=expand(s,i,i);
           curr_length=curr_str.length();
           if( curr_length>max_length){
               max_str=curr_str;
                max_length = curr_length;
           }
           curr_str=expand(s,i,i+1);
           curr_length=curr_str.length();
           if( curr_length>max_length){
               max_str=curr_str;
                max_length = curr_length;
           }
           
        }
        return max_str;
    }
   
}
